# BUILD SERVER
- name: Configure build server
  hosts: n4
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Java
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Install Maven
      apt:
        name: maven
        state: present

# NEXUS SERVER
- name: Install Nexus Repository Manager on Ubuntu with Java 11
  hosts: all
  become: yes
  vars:
    nexus_version: "3.46.0-01"  # Update to the latest or required version
    nexus_download_url: "https://download.sonatype.com/nexus/3/{{ nexus_version }}/nexus-{{ nexus_version }}-unix.tar.gz"
    nexus_install_dir: "/opt/nexus"
    nexus_data_dir: "/opt/sonatype-work"
    nexus_service_file: "/etc/systemd/system/nexus.service"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Java 11
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Install required packages
      apt:
        name:
          - wget
          - tar
        state: present

    - name: Create Nexus install directory
      file:
        path: "{{ nexus_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download Nexus tarball
      get_url:
        url: "{{ nexus_download_url }}"
        dest: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"

    - name: Extract Nexus tarball
      unarchive:
        src: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "{{ nexus_install_dir }}"
        remote_src: yes

    - name: Create Nexus data directory
      file:
        path: "{{ nexus_data_dir }}"
        state: directory
        mode: '0755'

    - name: Create Nexus user
      user:
        name: nexus
        system: yes
        shell: /sbin/nologin

    - name: Set ownership of Nexus directories
      file:
        path: "{{ item }}"
        owner: nexus
        group: nexus
        recurse: yes
      loop:
        - "{{ nexus_install_dir }}"
        - "{{ nexus_data_dir }}"

    - name: Configure Nexus to run as Nexus user
      lineinfile:
        path: "{{ nexus_install_dir }}/nexus-{{ nexus_version }}/bin/nexus.rc"
        line: "run_as_user=\"nexus\""
        create: yes

    - name: Create Nexus systemd service file
      copy:
        dest: "{{ nexus_service_file }}"
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=forking
          User=nexus
          Group=nexus
          ExecStart={{ nexus_install_dir }}/nexus-{{ nexus_version }}/bin/nexus start
          ExecStop={{ nexus_install_dir }}/nexus-{{ nexus_version }}/bin/nexus stop
          Restart=on-failure
          LimitNOFILE=65536
          LimitNPROC=2048
          LimitMEMLOCK=infinity

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd configuration
      systemd:
        daemon_reload: yes

    - name: Start Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes

    - name: Clean up tarball
      file:
        path: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        state: absent


# DEPLOY SERVERS
- name: Configure deploy servers
  hosts: deploy
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Java JDK
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Download Apache Tomcat
      get_url:
        url: https://downloads.apache.org/tomcat/tomcat-9/v9.0.74/bin/apache-tomcat-9.0.74.tar.gz
        dest: /opt/tomcat.tar.gz

    - name: Extract Apache Tomcat
      unarchive:
        src: /opt/tomcat.tar.gz
        dest: /opt
        remote_src: yes

    - name: Create symbolic link for Tomcat
      file:
        src: /opt/apache-tomcat-9.0.74
        dest: /opt/tomcat
        state: link

    - name: Create Tomcat user and set ownership
      user:
        name: tomcat
        state: present
        shell: /bin/false

    - name: Set ownership for Tomcat
      file:
        path: /opt/tomcat
        state: directory
        owner: tomcat
        group: tomcat
        recurse: yes

    - name: Start Tomcat service
      shell: "/opt/tomcat/bin/startup.sh"
      args:
        chdir: /opt/tomcat/
