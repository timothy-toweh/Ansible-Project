# BUILD SERVER
- name: Configure build server
  hosts: n4
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Java
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Install Maven
      apt:
        name: maven
        state: present

# NEXUS SERVER
- name: Install and configure Nexus Repository Manager
  hosts: n5
  become: yes

  tasks:
    - name: Install required packages
      apt:
        name:
          - openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Create nexus user
      user:
        name: nexus
        create_home: no
        shell: /bin/bash

    - name: Download Nexus Repository Manager
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /tmp/nexus-latest-unix.tar.gz

    - name: Extract Nexus
      unarchive:
        src: /tmp/nexus-latest-unix.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Find the latest Nexus directory
      shell: |
        find /opt -maxdepth 1 -type d -name 'nexus-3.*' | sort -t '-' -k3,3V -k4,4V | tail -n 1
      register: nexus_dir
      changed_when: false

    - name: Create a symbolic link for Nexus
      file:
        src: "{{ nexus_dir.stdout.strip() }}"
        dest: /opt/nexus
        state: link
        force: yes

    - name: Set ownership for Nexus directory
      file:
        path: /opt/nexus
        state: directory
        recurse: yes
        owner: nexus
        group: nexus

    - name: Create Nexus data directory
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus

    - name: Set Nexus as a service
      copy:
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=forking
          User=nexus
          Group=nexus
          ExecStart=/opt/nexus/bin/nexus start
          ExecStop=/opt/nexus/bin/nexus stop
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/nexus.service
        mode: '0644'

    - name: Reload systemd to pick up the new Nexus service
      systemd:
        daemon_reload: yes

    - name: Start Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes
      register: nexus_service_result

    - name: Gather Nexus service status
      command: systemctl status nexus.service
      register: nexus_status
      failed_when: false
      changed_when: false

    - name: Print Nexus service status
      debug:
        msg: "{{ nexus_status.stdout }}"

    - name: Gather Nexus service logs
      command: journalctl -xeu nexus.service --no-pager
      register: nexus_logs
      failed_when: false
      changed_when: false

    - name: Print Nexus service logs
      debug:
        msg: "{{ nexus_logs.stdout }}"


# DEPLOY SERVERS
- name: Configure deploy servers
  hosts: deploy
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Java JDK
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Download Apache Tomcat
      get_url:
        url: https://downloads.apache.org/tomcat/tomcat-9/v9.0.74/bin/apache-tomcat-9.0.74.tar.gz
        dest: /opt/tomcat.tar.gz

    - name: Extract Apache Tomcat
      unarchive:
        src: /opt/tomcat.tar.gz
        dest: /opt
        remote_src: yes

    - name: Create symbolic link for Tomcat
      file:
        src: /opt/apache-tomcat-9.0.74
        dest: /opt/tomcat
        state: link

    - name: Create Tomcat user and set ownership
      user:
        name: tomcat
        state: present
        shell: /bin/false

    - name: Set ownership for Tomcat
      file:
        path: /opt/tomcat
        state: directory
        owner: tomcat
        group: tomcat
        recurse: yes

    - name: Start Tomcat service
      shell: "/opt/tomcat/bin/startup.sh"
      args:
        chdir: /opt/tomcat/
